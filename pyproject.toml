[project]
name = "falconeye"
version = "2.0.0"
description = "FalconEYE v2.0 - AI-powered security code review with hexagonal architecture"
readme = "README.md"
keywords = ["security", "llm", "code-review", "ollama"]
requires-python = ">=3.12.0"
dependencies = [
    "llama-index>=0.13.1",
    "llama-index-vector-stores-chroma>=0.5.0",
    "rich>=14.0.0",
    "PyYAML>=6.0.2",
    "typer>=0.12.0",
    "unidiff>=0.7.5",
    "tree-sitter>=0.24.0",
    "tree-sitter-language-pack>=0.8.0",
    "chromadb>=1.0.13",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
]

[build-system]
requires = ["setuptools>=80.9.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
falconeye = "falconeye.adapters.cli.main:main"

[project.optional-dependencies]
postgres = ["llama-index-vector-stores-postgres>=0.5.4"]
test = ["pytest>=8.4.0", "pytest-asyncio>=0.23.0"]

lint = [
  "ruff>=0.12.1",
  "black>=25.1.0",
  "mypy>=1.16.1",
  "pre-commit>=4.2.0"
]

ollama = [
  "llama-index-llms-ollama>=0.3.0",
  "llama-index-embeddings-ollama>=0.3.0",
  "ollama>=0.3.0"
]

dev = [
  "falconeye[test]",
  "falconeye[lint]"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests requiring Ollama",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88